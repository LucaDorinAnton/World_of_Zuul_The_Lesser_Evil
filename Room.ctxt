#BlueJ class context
comment0.target=Room
comment0.text=\r\n\ Class\ Room\ -\ a\ location\ in\ an\ adventure\ game.\r\n\r\n\ This\ class\ is\ part\ of\ the\ "World\ of\ Zuul\:\ A\ lesser\ Evil"\ game\r\n\r\n\ A\ "Room"\ represents\ one\ location\ in\ the\ scenery\ of\ the\ game.\ \ It\ is\ \r\n\ connected\ to\ other\ rooms\ via\ exits.\ \ For\ each\ existing\ exit,\ the\ room\ \r\n\ stores\ a\ reference\ to\ the\ neighboring\ room.\r\n\ The\ room\ also\ has\ an\ inventory\ of\ items.\r\n\ It\ can\ also\ store\ a\ GamePlay\ object.\r\n\ It\ can\ also\ have\ locked\ rooms\ for\ which\r\n\ the\ player\ requires\ a\ "key"\ in\ order\ to\ traverse\r\n\ \r\n\ @author\ \ Michael\ K\u00F6lling\ and\ David\ J.\ Barnes\ and\ Anton\ Luca-Dorin\r\n\ @version\ 2017.12.08\r\n
comment1.params=name\ description
comment1.target=Room(java.lang.String,\ java.lang.String)
comment1.text=\r\n\ Create\ a\ room\ described\ "description"\ and\ named\ "name".\ Initially,\ it\ has\r\n\ no\ exits.\r\n\ @param\ description\ The\ room's\ description.\r\n\ @param\ name\ The\ room's\ name\r\n
comment10.params=direction
comment10.target=Room\ getExit(java.lang.String)
comment10.text=\r\n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ direction\r\n\ "direction".\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\r\n\ @param\ direction\ The\ exit's\ direction.\r\n\ @return\ The\ room\ in\ the\ given\ direction.\r\n
comment11.params=direction
comment11.target=java.lang.String\ getKey(java.lang.String)
comment11.text=\r\n\ Returns\ the\ key\ the\ player\ needs\ if\ he\ wants\r\n\ to\ travers\ a\ certain\ exit.\r\n\ @param\ direction\ the\ exit\ we\ want\ to\ go\ through\r\n\ @return\ the\ key\ required\ if\ we\ want\ to\ go\ through\ that\ exit\r\n
comment12.params=
comment12.target=void\ setVisited()
comment12.text=\r\n\ Define\ that\ the\ player\ has\ visited\ this\ room\r\n
comment13.params=
comment13.target=boolean\ getVisited()
comment13.text=\r\n\ @return\ if\ the\ player\ has\ visited\ this\ room\r\n
comment14.params=gamePlay
comment14.target=void\ setGamePlay(GamePlay)
comment14.text=\r\n\ Define\ \ gamePlay\ for\ this\ room.\r\n\ this\ is\ not\ done\ in\ the\ constructor,\ as\ the\ information\r\n\ required\ is\ not\ available\ at\ the\ time\ of\ construction\r\n\ @param\ gamePlay\ the\ gamePlay\ for\ this\ room\r\n
comment15.params=
comment15.target=boolean\ hasGamePlay()
comment15.text=\r\n\ @return\ if\ thi\ room\ has\ gamePlay\r\n
comment16.params=
comment16.target=boolean\ getGamePlayState()
comment16.text=\r\n\ if\ the\ level\ of\ this\ room\ has\ already\ been\ completed\r\n
comment17.params=
comment17.target=void\ startGame()
comment17.text=\r\n\ Starts\ the\ level\ of\ this\ room\r\n\ by\ callig\ it's\ show\ method\r\n
comment18.params=
comment18.target=void\ stopGame()
comment18.text=\r\n\ Stops\ the\ level\ of\ this\ game\r\n\ by\ calling\ it's\ hide\ methode\r\n\ usually\ when\ the\ level\ is\ done\r\n
comment19.params=
comment19.target=java.util.ArrayList\ getInventory()
comment19.text=\r\n\ @return\ inventory\ the\ inventory\ of\ this\ room\r\n
comment2.params=direction\ neighbor\ key
comment2.target=void\ setExit(java.lang.String,\ Room,\ java.lang.String)
comment2.text=\r\n\ Define\ an\ exit\ from\ this\ room.\r\n\ @param\ direction\ The\ direction\ of\ the\ exit.\r\n\ @param\ neighbor\ \ The\ room\ to\ which\ the\ exit\ leads.\r\n
comment20.params=index
comment20.target=Item\ getItemAtIndex(int)
comment20.text=\r\n\ @param\ a\ specific\ index\ in\ the\ Inventory\ of\ this\ room(assumed\ valid)\r\n\ @return\ an\ item\ that\ index\r\n
comment21.params=itemToAdd
comment21.target=void\ addToInventory(Item)
comment21.text=\r\n\ @param\ the\ Itam\ which\ will\ be\ added\ to\ the\ room's\ inventory\r\n
comment22.params=itemToRemove
comment22.target=void\ removeItemFromInventory(Item)
comment22.text=\r\n\ @param\ the\ item\ to\ remove\ from\ the\ room's\ inventory\r\n
comment23.params=index
comment23.target=void\ removeItemFromInventory(int)
comment23.text=\r\n\ @param\ the\ index\ at\ which\ we\ will\ find\ the\ item\ to\ remove(assumed\ valid)\r\n
comment24.params=playerHealth\ maxPlayerHealth\ shells\ hasShotgun\ playerName
comment24.target=void\ setDetails(int,\ int,\ int,\ boolean,\ java.lang.String)
comment24.text=\r\n\ Give\ the\ GamePlay\ object\ it's\ necessary\ info\ in\ order\ to\ be\ able\ to\ start\ the\ game\r\n\ @param\ playerHealth\ the\ player's\ current\ health\r\n\ @param\ maxPlayerHealth\ the\ player's\ maxiumu\ Hitpoints\r\n\ @param\ shells\ the\ player's\ amount\ of\ ammo\r\n\ @param\ hasShotgun\ if\ the\ player\ has\ aquired\ the\ ShotGun\ object\r\n\ @param\ name\ the\ player's\ name\r\n
comment25.params=
comment25.target=int\ getHealth()
comment25.text=\r\n\ @return\ the\ health\ of\ the\ player,\ according\ to\ the\ rooms\ GamePlay\ object\r\n
comment26.params=
comment26.target=int\ getShells()
comment26.text=\r\n\ @return\ the\ shotgun\ shells\ of\ the\ player,\ according\ to\ this\ rooms\ GamePlay\ object\r\n
comment3.params=
comment3.target=java.lang.String\ getShortDescription()
comment3.text=\r\n\ @return\ The\ short\ description\ of\ the\ room\r\n\ (the\ one\ that\ was\ defined\ in\ the\ constructor).\r\n
comment4.params=
comment4.target=java.lang.String\ getLongDescription()
comment4.text=\r\n\ return\ a\ description\ of\ the\ room\ also\ containing\r\n\ the\ exits\ and\ the\ rooms\ linked\ to\ them\ respectivley.\r\n\ @return\ A\ long\ description\ of\ this\ room\r\n
comment5.params=
comment5.target=java.lang.String\ getExitString()
comment5.text=\r\n\ Return\ a\ string\ describing\ the\ room's\ exits\r\n\ and\ the\ rooms\ linked\ to\ them,\ for\ example\r\n\ "north\ -\ plains\r\n\ \ west\ -\ meadows".\r\n\ @return\ Details\ of\ the\ room's\ exits.\r\n
comment6.params=itemName
comment6.target=boolean\ checkForItemInInventory(java.lang.String)
comment6.text=\r\n\ Check\ if\ an\ Item\ with\ a\ specific\ name\r\n\ is\ in\ this\ room's\ inventory\r\n\ @param\ the\ Item\ name\ we\ are\ checking\ for\r\n\ @return\ if\ we\ found\ it\ or\ not\r\n
comment7.params=
comment7.target=java.util.Set\ getExitSet()
comment7.text=\r\n\ @return\ the\ set\ of\ exits\ of\ this\ Room\r\n
comment8.params=
comment8.target=java.util.Set\ getKeySet()
comment8.text=\r\n\ @return\ the\ set\ of\ keys\ to\ open\ the\ locked\ doors\r\n
comment9.params=
comment9.target=java.lang.String\ getName()
comment9.text=\r\n\ @return\ the\ name\ of\ this\ room\r\n
numComments=27
